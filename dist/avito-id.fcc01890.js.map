{"mappings":"AAIA,IAYIA,KACAC,KACAC,KAdAC,UAAYC,SAASC,eAAe,mBACpCC,SAAWH,UAAUI,YACrBC,UAAYL,UAAUM,aAE1B,SAASC,YAAYC,EAAMC,GACzB,IAAIC,EAAM,IAAIC,MAAMH,GACpB,IAAK,IAAII,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC9BF,EAAIE,GAAK,IAAID,MAAMF,GAErB,OAAOC,EAMT,IAAII,WAAa,GAEjB,SAASC,QAEPC,aAAab,SAAUE,WAAWY,OAAO,mBACzCnB,KAAOoB,MAAMC,YAAcL,YAC3Bf,KAAOmB,MAAME,aAAeN,YAE5BjB,KAAOU,YAAYT,KAAMC,MACzB,IAAK,IAAIa,EAAI,EAAGA,EAAId,KAAMc,IACxB,IAAK,IAAIS,EAAI,EAAGA,EAAItB,KAAMsB,IACxBxB,KAAKe,GAAGS,GAAKH,MAAMI,OAAO,IAKhC,SAASC,OACPC,WAAW,WACXC,QAAQC,IAAIvB,UACZ,IAAK,IAAIS,EAAI,EAAGA,EAAId,KAAMc,IACxB,IAAK,IAAIS,EAAI,EAAGA,EAAItB,KAAMsB,IAAK,CAC7B,IAAIM,EAAIf,EAAIE,WACRc,EAAIP,EAAIP,WACM,GAAdjB,KAAKe,GAAGS,KACVQ,KAAK,GACLC,OAAO,WACPC,KAAKJ,EAAGC,EAAGd,WAAa,EAAGA,WAAa,IAK9C,IAAIkB,EAAOzB,YAAYT,KAAMC,MAG7B,IAAK,IAAIkC,EAAI,EAAGA,EAAInC,KAAMmC,IACxB,IAAK,IAAIC,EAAI,EAAGA,EAAInC,KAAMmC,IAAK,CAC7B,IAAIC,EAAQtC,KAAKoC,GAAGC,GAGhBE,EAAYC,eAAexC,KAAMoC,EAAGC,GAGtCF,EAAKC,GAAGC,GADG,GAATC,GAA2B,GAAbC,EACH,EACK,GAATD,IAAeC,EAAY,GAAKA,EAAY,GACxC,EAEAD,EAKnBtC,KAAOmC,EAIT,SAASK,eAAeC,EAAMX,EAAGC,GAC/B,IAAIW,EAAM,EACV,IAAK,IAAI3B,GAAI,EAAIA,EAAI,EAAGA,IACtB,IAAK,IAAIS,GAAI,EAAIA,EAAI,EAAGA,IAAK,CAC3B,IACImB,GAAOZ,EAAIP,EAAItB,MAAQA,KAC3BwC,GAAOD,GAFIX,EAAIf,EAAId,MAAQA,MAEV0C,GAIrB,OADAD,GAAOD,EAAKX,GAAGC,GACRW,EAGT,SAASE,gBACPtC,SAAWH,UAAUI,YACrBC,UAAYL,UAAUM,aACtBoC,aAAavC,SAAUE","sources":["src/scripts/p5/gameOfLife.js"],"sourcesContent":["//Anastasiia Balagurova\n//23.03.2022\n//This is a 'Game of life' simulation. It's based on a tutorial by Coding Train: https://www.youtube.com/watch?v=FWSR_7kZuYg\n\nlet canvasDiv = document.getElementById('canvasContainer');\nlet divWidth = canvasDiv.offsetWidth;\nlet divHeight = canvasDiv.offsetHeight;\n\nfunction make2DArray(cols, rows) {\n  let arr = new Array(cols);\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = new Array(rows);\n  }\n  return arr;\n}\n\nlet grid;\nlet cols;\nlet rows;\nlet resolution = 10;\n\nfunction setup() {\n  //create canvas in the div\n  createCanvas(divWidth, divHeight).parent(\"canvasContainer\");\n  cols = floor(windowWidth / resolution);\n  rows = floor(windowHeight / resolution);\n\n  grid = make2DArray(cols, rows);\n  for (let i = 0; i < cols; i++) {\n    for (let j = 0; j < rows; j++) {\n      grid[i][j] = floor(random(2));\n    }\n  }\n}\n\nfunction draw() {\n  background('#FDE033');\n  console.log(divWidth)\n  for (let i = 0; i < cols; i++) {\n    for (let j = 0; j < rows; j++) {\n      let x = i * resolution;\n      let y = j * resolution;\n      if (grid[i][j] == 1) {\n        fill(0);\n        stroke('#FDE033');\n        rect(x, y, resolution - 1, resolution - 1);\n      }\n    }\n  }\n\n  let next = make2DArray(cols, rows);\n\n  // Compute next based on grid\n  for (let i = 0; i < cols; i++) {\n    for (let j = 0; j < rows; j++) {\n      let state = grid[i][j];\n      // Count live neighbors!\n      let sum = 0;\n      let neighbors = countNeighbors(grid, i, j);\n\n      if (state == 0 && neighbors == 3) {\n        next[i][j] = 1;\n      } else if (state == 1 && (neighbors < 2 || neighbors > 3)) {\n        next[i][j] = 0;\n      } else {\n        next[i][j] = state;\n      }\n\n    }\n  }\n  grid = next;\n}\n\n\nfunction countNeighbors(grid, x, y) {\n  let sum = 0;\n  for (let i = -1; i < 2; i++) {\n    for (let j = -1; j < 2; j++) {\n      let col = (x + i + cols) % cols;\n      let row = (y + j + rows) % rows;\n      sum += grid[col][row];\n    }\n  }\n  sum -= grid[x][y];\n  return sum;\n}\n\nfunction windowResized() {\n  divWidth = canvasDiv.offsetWidth;\n  divHeight = canvasDiv.offsetHeight;\n  resizeCanvas(divWidth, divHeight);\n}"],"names":["grid","cols","rows","canvasDiv","document","getElementById","divWidth","offsetWidth","divHeight","offsetHeight","make2DArray","cols1","rows1","arr","Array","i","length","resolution","setup","createCanvas","parent","floor","windowWidth","windowHeight","j","random","draw","background","console","log","x","y","fill","stroke","rect","next","i1","j1","state","neighbors","countNeighbors","grid1","sum","row","windowResized","resizeCanvas"],"version":3,"file":"avito-id.fcc01890.js.map"}