{"mappings":"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","sources":["src/scripts/shapes.js"],"sourcesContent":["const Shapes = function(selector) {\n    // Начальные данные\n    const ASSETS_PATH = './games/';\n\n    const objectsCount = 20;\n    const objectsSource = [{\n            \"img\": \"triangle\",\n            \"width\": 43,\n            \"height\": 37\n        },\n        {\n            \"img\": \"circle\",\n            \"width\": 37,\n            \"height\": 37\n        },\n        {\n            \"img\": \"romb\",\n            \"width\": 42,\n            \"height\": 42\n        }\n    ];\n    let score,\n        interactive,\n        answers = [],\n        answerCounter,\n        currentBtn,\n        finishRight,\n        objectLast,\n        gameStarted,\n        speed,\n        gameEnded;\n\n    // Инициализация PIXI\n\n    const gameContainer = document.querySelector(selector);\n    const app = new PIXI.Application({\n        backgroundColor: 0xffffff,\n        width: 375,\n        height: 667,\n        antialias: true,\n        resolution: 3,\n        autoDensity: true,\n    });\n    gameContainer.appendChild(app.view);\n\n    app.renderer.plugins.interaction.autoPreventDefault = false;\n    app.renderer.view.style.touchAction = 'auto';\n\n    // Создание финиша\n\n    let finish = new PIXI.Container();\n    let finishImgMain = new PIXI.Texture.from(`${ASSETS_PATH}finish.png`);\n    let finishImgRight = new PIXI.Texture.from(`${ASSETS_PATH}finish-right.png`);\n    let finishImg = new PIXI.Sprite.from(finishImgMain);\n    finishImg.x = 0;\n    finishImg.y = 495;\n    finishImg.width = 375;\n    finishImg.height = 55;\n    app.stage.addChild(finish);\n    finish.addChild(finishImg);\n\n    // Создание контейнера сетки карточек\n\n    let grid = new PIXI.Container();\n    grid.x = 0;\n    grid.y = 0;\n    app.stage.addChild(grid);\n\n    // Создание контейнера счета\n\n    let scoreWrap = new PIXI.Container();\n    let scoreText = new PIXI.Text('SCORE');\n    let scoreValue = new PIXI.Text(score);\n    let scoreBg = new PIXI.Graphics();\n    scoreBg.beginFill(0xFFFFFF);\n    scoreBg.drawRect(0, 0, 375, 50);\n    scoreBg.endFill();\n    app.stage.addChild(scoreWrap);\n    scoreWrap.addChild(scoreBg);\n    scoreWrap.addChild(scoreText);\n    scoreWrap.addChild(scoreValue);\n\n    // Создание контейнера навигации\n\n    let nav = new PIXI.Container();\n\n    nav.x = 0;\n    nav.y = 594;\n    app.stage.addChild(nav);\n\n    // Создание кнопки старт\n\n    let startBtn = new PIXI.Sprite.from(`${ASSETS_PATH}start-btn.png`);\n    startBtn.x = 41;\n    startBtn.y = 259;\n    startBtn.width = 285;\n    startBtn.height = 56;\n    startBtn.on('pointerdown', () => {\n        generationObjects();\n        startBtn.alpha = 0;\n        startBtn.buttonMode = false;\n        startBtn.interactive = false;\n        gameStarted = true;\n    });\n    app.stage.addChild(startBtn);\n\n    // Создание финального экрана с кнопкой рестарта\n\n    let endScreen = new PIXI.Container();\n    endScreen.width = 375;\n    endScreen.height = 667;\n    endScreen.alpha = 0;\n    let endScreenWin = new PIXI.Texture.from(`${ASSETS_PATH}win-screen.png`);\n    let endScreenLoss = new PIXI.Texture.from(`${ASSETS_PATH}loss-screen.png`);\n    let endScreenImg = new PIXI.Sprite.from(endScreenWin);\n    endScreenImg.width = 375;\n    endScreenImg.height = 667;\n    let screenBtn = new PIXI.Sprite.from(`${ASSETS_PATH}restart-btn.png`);\n    screenBtn.width = 82;\n    screenBtn.height = 82;\n    app.stage.addChild(endScreen);\n    endScreen.addChild(endScreenImg);\n\n    endScreen.addChild(screenBtn);\n    screenBtn.x = 147;\n    screenBtn.y = 525;\n    screenBtn.buttonMode = true;\n    screenBtn.on('pointerdown', () => {\n        init();\n        fadeOut(endScreen);\n    });\n\n    // Инициализация(рестар) игры\n\n    function init() {\n        // generationObjects();\n        drawScore();\n        drawNav();\n        interactive = true;\n        answers = [];\n        grid.children = [];\n        answerCounter = 0;\n        score = 0;\n        endScreen.interactive = false;\n        screenBtn.interactive = false;\n        gameEnded = false;\n        currentBtn = null;\n        objectLast = objectsCount - 1;\n        finishRight = false;\n        startBtn.alpha = 1;\n        startBtn.buttonMode = true;\n        startBtn.interactive = true;\n        speed = 1;\n    }\n    init();\n\n\n\n    // Отрисовка счета\n\n    function drawScore() {\n        scoreValue.style.fill = 0x242424;\n        scoreValue.style.fontSize = 40;\n        scoreValue.style.fontFamily = 'DisposableDroid BB';\n        scoreValue.text = `000`;\n        scoreValue.y = 6;\n        scoreValue.x = 315;\n        scoreText.style.fill = 0x242424;\n        scoreText.style.fontSize = 40;\n        scoreText.style.fontFamily = 'DisposableDroid BB';\n        scoreText.y = 6;\n        scoreText.x = 10;\n        scoreText.style.textTransform = 'uppercase';\n\n    }\n\n    // Отрисовка кнопок\n\n\n    function drawBtn(imgsrc, imgx, imgy, imgwidth, imgheight, x, id) {\n        let btn = new PIXI.Container();\n\n        let graph = new PIXI.Graphics();\n        btn.imageMain = new PIXI.Texture.from(`${ASSETS_PATH}${imgsrc}.png`);\n        btn.imageInvert = new PIXI.Texture.from(`${ASSETS_PATH}${imgsrc}-invert.png`);\n        btn.image = new PIXI.Sprite.from(btn.imageMain);\n        btn.id = id;\n        graph.beginFill(0xFFFFFF);\n        graph.drawRect(0, 0, 121, 74);\n        graph.endFill();\n        btn.image.x = imgx;\n        btn.image.y = imgy;\n        btn.image.width = imgwidth;\n        btn.image.height = imgheight;\n        btn.x = x;\n        btn.y = 0;\n        nav.addChild(btn);\n        btn.addChild(graph);\n        btn.addChild(btn.image);\n        btn.interactive = true;\n        btn.buttonMode = true;\n        btn.on('pointerdown', pressBtn);\n    }\n\n    // Нажатие на кнопку\n\n    function pressBtn() {\n        if (gameStarted && !gameEnded) {\n            let id = this.id;\n            if (currentBtn !== null && currentBtn !== this) {\n                currentBtn.image.texture = currentBtn.imageMain;\n            }\n            currentBtn = this;\n            currentBtn.image.texture = currentBtn.imageInvert;\n            checkNearbyObject(id);\n        }\n\n    }\n\n    function checkNearbyObject(id) {\n\n        if (id == [grid.children[objectLast].id]) {\n            finishImg.texture = finishImgRight;\n        } else {\n            finishImg.texture = finishImgMain;\n        }\n    }\n    // Отрисовка навигации\n\n    function drawNav() {\n        nav.children = [];\n        let navBg = new PIXI.Graphics();\n        navBg.beginFill(0xFFFFFF);\n        navBg.drawRect(0, -44, 375, 118);\n        navBg.endFill();\n        nav.addChild(navBg);\n        new drawBtn('triangle', 37, 12, 42, 37, 0, 0);\n        new drawBtn('circle', 44, 12, 37, 37, 127, 1);\n        new drawBtn('romb', 41, 8, 42, 42, 254, 2);\n    }\n\n\n    // Создание коллекции карточек и загрузка в сетку\n\n    function generationObjects() {\n        let idArray = [0, 1, 2];\n        let ySumm = 0;\n        grid.children = [];\n        let currentArray = shuffle(idArray);\n        let idCounter = 0;\n        for (let i = 0; i < objectsCount; i++) {\n            let currentId;\n            if (idCounter > 2) {\n                idCounter = 0;\n                currentArray = shuffle(idArray);\n            }\n            currentId = currentArray[idCounter];\n            let item = new PIXI.Sprite.from(`${ASSETS_PATH}${objectsSource[currentId].img}.png`);\n            item.id = currentId;\n            item.width = objectsSource[currentId].width;\n            item.height = objectsSource[currentId].height;\n            item.isDestroyed = false;\n            item.x = getRandom((30 + 100 * idCounter), (90 + 100 * idCounter));\n            item.y = ySumm;\n\n            ySumm += getRandom(100, 200) + item.height;\n            grid.addChild(item);\n            idCounter++;\n        }\n        grid.y = -ySumm + 500;\n\n        moveGrid();\n    }\n\n\n    function moveGrid() {\n        function animationUpdate(delta) {\n            grid.y += speed * delta;\n            if (grid.y - finishImg.y - finishImg.height - grid.children[0].y - grid.children[0].height > 0) {\n                app.ticker.remove(animationUpdate);\n            }\n            comparison(animationUpdate);\n        }\n        app.ticker.add(animationUpdate);\n\n    }\n\n    // Сравнение выбранного объекта и пересекаемого финишную черту\n\n    function comparison(animationUpdate) {\n        if (objectLast >= 0 && grid.y + grid.children[objectLast].y + grid.children[objectLast].height - 11 - finishImg.y > 0) {\n            if (currentBtn !== null) {\n                if (grid.children[objectLast].id === currentBtn.id) {\n                    updateScore();\n                    speed += 0.1;\n                } else {\n                    app.ticker.remove(animationUpdate);\n                    gameEnd('loss');\n                }\n                resetBtn();\n            } else {\n                app.ticker.remove(animationUpdate);\n                gameEnd('loss');\n            }\n\n            objectLast--;\n\n        }\n\n    }\n\n    function resetBtn() {\n        currentBtn.image.texture = currentBtn.imageMain;\n        finishImg.texture = finishImgMain;\n        currentBtn = null;\n    }\n    // Рандом\n\n    function getRandom(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n\n    // Перемешивание\n\n    function shuffle(array) {\n        let counter = array.length,\n            temp,\n            index;\n        while (counter > 0) {\n            index = Math.floor(Math.random() * counter);\n            counter--;\n            temp = array[counter];\n            array[counter] = array[index];\n            array[index] = temp;\n        }\n        return array;\n    }\n    // Обновление счета\n\n    function updateScore() {\n        score += 1;\n        let displayScore;\n        if (score >= 10) {\n            displayScore = `0${score}`;\n        } else {\n            displayScore = `00${score}`;\n        }\n        scoreValue.text = displayScore;\n        if (score === objectsCount) {\n\n            gameEnd();\n        }\n    }\n\n    // Игра пройдена\n\n    function gameEnd(result) {\n        interactive = false;\n        gameEnded = true;\n        gameStarted = false;\n\n        if (result === 'loss') {\n            endScreenImg.texture = endScreenLoss;\n        } else {\n            endScreenImg.texture = endScreenWin;\n        }\n        fadeIn(endScreen);\n        endScreen.interactive = true;\n        screenBtn.interactive = true;\n    }\n\n    // Анимационные эффекты\n\n    function fadeOut(item) {\n        item.alpha = 1;\n\n        function animationUpdate(delta) {\n            item.alpha -= 0.15 * delta;\n            if (item.alpha <= 0) {\n                app.ticker.remove(animationUpdate);\n            }\n        }\n        app.ticker.add(animationUpdate);\n    }\n\n    function fadeIn(item) {\n        item.alpha = 0;\n\n        function animationUpdate(delta) {\n            item.alpha += 0.15 * delta;\n            if (item.alpha >= 1) {\n                app.ticker.remove(animationUpdate);\n            }\n        }\n        app.ticker.add(animationUpdate);\n    }\n};\n"],"names":["Shapes","selector","objectsSource","img","width","height","score","interactive","answerCounter","currentBtn","finishRight","objectLast","gameStarted","speed","gameEnded","answers","gameContainer","document","querySelector","app","PIXI","Application","backgroundColor","antialias","resolution","autoDensity","appendChild","view","renderer","plugins","interaction","autoPreventDefault","style","touchAction","finish","Container","finishImgMain","Texture","from","finishImgRight","finishImg","Sprite","x","y","stage","addChild","grid","scoreWrap","scoreText","Text","scoreValue","scoreBg","Graphics","beginFill","drawRect","endFill","nav","startBtn","on","idArray","ySumm","children","currentArray","shuffle","idCounter","i","currentId","item","id","isDestroyed","getRandom","animationUpdate","delta","ticker","remove","displayScore","text","gameEnd","updateScore","image","texture","imageMain","comparison","add","moveGrid","generationObjects","alpha","buttonMode","endScreen","endScreenWin","endScreenLoss","endScreenImg","screenBtn","init","fill","fontSize","fontFamily","textTransform","navBg","drawBtn","drawNav","objectsCount","imgsrc","imgx","imgy","imgwidth","imgheight","btn","graph","imageInvert","pressBtn","this","checkNearbyObject","min","max","Math","floor","random","array","temp","index","counter","length","result","fadeIn","fadeOut"],"version":3,"file":"recommendations.82324b6f.js.map"}