{"mappings":"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","sources":["src/scripts/heart.js"],"sourcesContent":["const Heart = function(selector) {\n    // Начальные данные\n\n    const ASSETS_PATH = './games/';\n\n    const cardSize = 22;\n    const cardMargin = 2;\n    const cardsSource = [\n        [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0],\n        [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0],\n        [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0],\n        [2, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2],\n        [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2],\n        [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2],\n        [2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2],\n        [2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2],\n        [2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],\n        [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n        [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    ];\n\n    let score,\n        interactive,\n        cardsArray = [],\n        answers = [],\n        answerCounter,\n        blackCardCounter,\n        playerColumn,\n        isFocus = false,\n        shootCount,\n        gameEnded;\n\n    // Инициализация PIXI\n\n    const gameContainer = document.querySelector(selector);\n    const app = new PIXI.Application({\n        backgroundColor: 0xffffff,\n        width: 375,\n        height: 667,\n        antialias: true,\n        resolution: 3,\n        autoDensity: true,\n    });\n    gameContainer.appendChild(app.view);\n\n    app.renderer.plugins.interaction.autoPreventDefault = false;\n    app.renderer.view.style.touchAction = 'auto';\n\n    // Проверка фокуса на данном canvas\n\n    gameContainer.querySelector('canvas').addEventListener('click', () => {\n        isFocus = true;\n        document.addEventListener('click', checkFocus);\n    });\n\n    function checkFocus(e) {\n        if (e.target === gameContainer.querySelector('canvas')) {\n            isFocus = true;\n        } else {\n            isFocus = false;\n            document.removeEventListener('click', checkFocus, false);\n        }\n    }\n\n    // Создание контейнера сетки карточек\n\n    let grid = new PIXI.Container();\n    grid.x = 33;\n    grid.y = 121;\n    app.stage.addChild(grid);\n\n    // Создание контейнера счета\n\n    let scoreWrap = new PIXI.Container();\n    let scoreText = new PIXI.Text('SCORE');\n    let scoreValue = new PIXI.Text(score);\n    app.stage.addChild(scoreWrap);\n    scoreWrap.addChild(scoreText);\n    scoreWrap.addChild(scoreValue);\n\n    // Создание контейнера навигации\n\n    let nav = new PIXI.Container();\n    nav.x = 0;\n    nav.y = 594;\n    app.stage.addChild(nav);\n\n    // Создание контейнера снаряда\n\n    let battleground = new PIXI.Container();\n    let bullet;\n    battleground.x = 0;\n    battleground.y = 0;\n\n    app.stage.addChild(battleground);\n\n    // Создание игрока\n\n    let player = new PIXI.Sprite.from(`${ASSETS_PATH}player.svg`);\n\n    app.stage.addChild(player);\n\n    // Создание финального экрана с кнопкой рестарта\n\n    let endScreen = new PIXI.Container();\n    endScreen.width = 375;\n    endScreen.height = 667;\n    endScreen.alpha = 0;\n    let endScreenWin = new PIXI.Texture.from(`${ASSETS_PATH}win-screen.png`);\n    let endScreenLoss = new PIXI.Texture.from(`${ASSETS_PATH}loss-screen.png`);\n    let endScreenImg = new PIXI.Sprite.from(endScreenWin);\n    endScreenImg.width = 375;\n    endScreenImg.height = 667;\n    let screenBtn = new PIXI.Sprite.from(`${ASSETS_PATH}restart-btn.png`);\n    screenBtn.width = 82;\n    screenBtn.height = 82;\n    app.stage.addChild(endScreen);\n    endScreen.addChild(endScreenImg);\n\n    endScreen.addChild(screenBtn);\n    screenBtn.x = 147;\n    screenBtn.y = 525;\n    screenBtn.buttonMode = true;\n    screenBtn.on('pointerdown', () => {\n        init();\n        fadeOut(endScreen);\n    });\n\n    // Инициализация(рестар) игры\n\n    function init() {\n        generationCards();\n        drawGrid(cardsArray, cardsSource[0].length);\n        drawScore();\n        drawNav();\n        drawPlayer();\n        interactive = true;\n        answers = [];\n        answerCounter = 0;\n        score = 0;\n        playerColumn = 6;\n        endScreen.interactive = false;\n        screenBtn.interactive = false;\n        gameEnded = false;\n        shootCount = 0;\n        battleground.children = [];\n    }\n    init();\n\n    // Отрисовка счета\n\n    function drawScore() {\n        scoreValue.style.fill = 0x242424;\n        scoreValue.style.fontSize = 40;\n        scoreValue.style.fontFamily = 'DisposableDroid BB';\n        scoreValue.text = `000`;\n        scoreValue.y = 6;\n        scoreValue.x = 315;\n        scoreText.style.fill = 0x242424;\n        scoreText.style.fontSize = 40;\n        scoreText.style.fontFamily = 'DisposableDroid BB';\n        scoreText.y = 6;\n        scoreText.x = 10;\n        scoreText.style.textTransform = 'uppercase';\n    }\n\n    // Отрисовка кнопок\n\n    function drawBtn(imgsrc, imgx, imgy, imgwidth, imgheight, x, _fun) {\n        let btn = new PIXI.Container();\n        let graph = new PIXI.Graphics();\n        let image = new PIXI.Sprite.from(`${ASSETS_PATH}${imgsrc}.png`);\n        graph.beginFill(0xfde033);\n        graph.drawRect(0, 0, 121, 74);\n        graph.endFill();\n        image.x = imgx;\n        image.y = imgy;\n        image.width = imgwidth;\n        image.height = imgheight;\n        btn.x = x;\n        btn.y = 0;\n        nav.addChild(btn);\n        btn.addChild(graph);\n        btn.addChild(image);\n        btn.interactive = true;\n        btn.buttonMode = true;\n        btn.on('pointerdown', () => {\n            if (!gameEnded) {\n                _fun();\n            }\n        });\n    }\n\n    // Отрисовка навигации\n\n    function drawNav() {\n        nav.children = [];\n        new drawBtn('left-arrow', 51, 23, 19.2, 32, 0, moveLeft);\n        new drawBtn('circle-2', 45, 23, 32, 32, 127, shoot);\n        new drawBtn('right-arrow', 55, 23, 19.2, 32, 254, moveRight);\n    }\n\n\n    // Навигация по нажатию стрелочек\n\n    let isPressed = false;\n    document.addEventListener('keydown', function(event) {\n        if (!isPressed && isFocus && !gameEnded) {\n            isPressed = true;\n\n            switch (event.key) {\n                case 'ArrowLeft':\n                    moveLeft();\n                    break;\n                case 'ArrowUp':\n                    shoot();\n                    break;\n                case 'ArrowRight':\n                    moveRight();\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    });\n    document.addEventListener('keyup', function(event) {\n        isPressed = false;\n    });\n\n    // Генерация снаряда\n\n    function shoot() {\n        if (shootCount < 5) {\n            bullet = new PIXI.Graphics();\n            bullet.beginFill(0x242424);\n            bullet.drawRect(0, 0, 11, 11);\n            bullet.endFill();\n            bullet.x = player.x + 22;\n            bullet.y = player.y;\n            battleground.addChild(bullet);\n            bulletMove(bullet, shootCount);\n            shootCount += 1;\n        }\n    }\n\n    // Анимация снаряда\n\n    function bulletMove(bullet) {\n\n        // Сортировка индесов в текущей колонке массива\n\n        let indexArray = [];\n        for (let i = 0; i < cardsSource.length; i++) {\n            let index = i * cardsSource[0].length + playerColumn;\n            indexArray.push(index);\n        }\n\n        let existsIndex = indexArray.filter((index) => {\n            return index <= cardsArray.length;\n        });\n\n        function animationUpdate(delta) {\n\n            // Для анимации игра должна быть не закончена\n            if (!gameEnded) {\n                // Крайний не уничтоженный блок в колонке полета снаряда\n\n                let undestroyedCards = existsIndex.filter((index) => {\n                    if (!cardsArray[index].isDestroyed) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                });\n                let nearbyCard = cardsArray[undestroyedCards[undestroyedCards.length - 1]];\n                let nearbyCardY = 0;\n                if (nearbyCard !== undefined) {\n                    nearbyCardY = nearbyCard.y + nearbyCard.height + grid.y;\n                }\n                bullet.y -= 5 * delta;\n\n                // Просчет столкновения\n\n                if (undestroyedCards.length > 0 && bullet.y <= nearbyCardY) {\n                    nearbyCard.isDestroyed = true;\n\n                    if (nearbyCard.id === 1) {\n                        nearbyCard.alpha = 0;\n                        gameEnd('loss');\n                        destroyBullet();\n                        battleground.children = [];\n                    } else if (nearbyCard.id === 2) {\n                        nearbyCard.alpha = 0;\n                        updateScore();\n                        destroyBullet();\n                    }\n                } else if (bullet.y <= 2) {\n                    destroyBullet();\n                }\n            } else {\n                app.ticker.remove(animationUpdate);\n            }\n        }\n        app.ticker.add(animationUpdate);\n\n        function destroyBullet() {\n            app.ticker.remove(animationUpdate);\n            bullet.destroy();\n            shootCount -= 1;\n        }\n    }\n    // Движение игрока влево\n\n    function moveLeft() {\n        if (player.x >= 18) {\n            playerColumn -= 1;\n            player.x -= 24;\n        }\n    }\n\n    // Движение игрока вправо\n\n    function moveRight() {\n        if (player.x <= 300) {\n            playerColumn += 1;\n            player.x += 24;\n        }\n    }\n\n    // Отрисовка Игрока\n\n    function drawPlayer() {\n        player.x = 160;\n        player.y = 532;\n        player.width = 55;\n    }\n\n    // Создание коллекции карточек и загрузка в сетку\n\n    function generationCards() {\n        grid.children = [];\n        cardsArray = [];\n        blackCardCounter = 0;\n        for (let i = 0; i < cardsSource.length; i++) {\n            for (let j = 0; j < cardsSource[i].length; j++) {\n                let item = new PIXI.Container();\n                let graph = new PIXI.Graphics();\n                item.id = cardsSource[i][j];\n                item.isDestroyed = false;\n                if (cardsSource[i][j] === 2) {\n                    graph.beginFill(0x242424);\n                    blackCardCounter += 1;\n                } else if (cardsSource[i][j] === 1) {\n                    graph.beginFill(0xfde033);\n                } else {\n                    graph.beginFill(0xffffff);\n                }\n                graph.drawRect(0, 0, cardSize, cardSize);\n                graph.endFill();\n                item.addChild(graph);\n                grid.addChild(item);\n                cardsArray.push(item);\n            }\n        }\n    }\n\n    // Отрисовка сетки\n\n    function drawGrid(arr, col) {\n        let len = arr.length;\n        let box;\n        for (let j = 0; j < len; j++) {\n            box = arr[j];\n            box.x = (j % col) * (cardSize + cardMargin);\n            box.y = parseInt(j / col) * (cardSize + cardMargin);\n        }\n    }\n\n    // Обновление счета\n\n    function updateScore() {\n        score += 1;\n        let displayScore;\n        if (score >= 10) {\n            displayScore = `0${score}`;\n        } else {\n            displayScore = `00${score}`;\n        }\n        scoreValue.text = displayScore;\n        if (score === blackCardCounter) {\n            gameEnd();\n        }\n    }\n\n    // Игра пройдена\n\n    function gameEnd(result) {\n        interactive = false;\n        gameEnded = true;\n\n\n        if (result === 'loss') {\n            endScreenImg.texture = endScreenLoss;\n        } else {\n            endScreenImg.texture = endScreenWin;\n        }\n        fadeIn(endScreen);\n        endScreen.interactive = true;\n        screenBtn.interactive = true;\n    }\n\n    // Анимационные эффекты\n\n    function fadeOut(item) {\n        item.alpha = 1;\n\n        function animationUpdate(delta) {\n            item.alpha -= 0.15 * delta;\n            if (item.alpha <= 0) {\n                app.ticker.remove(animationUpdate);\n            }\n        }\n        app.ticker.add(animationUpdate);\n    }\n\n    function fadeIn(item) {\n        item.alpha = 0;\n\n        function animationUpdate(delta) {\n            item.alpha += 0.15 * delta;\n            if (item.alpha >= 1) {\n                app.ticker.remove(animationUpdate);\n            }\n        }\n        app.ticker.add(animationUpdate);\n    }\n};\n"],"names":["Heart","selector","cardSize","cardsSource","score","interactive","answerCounter","blackCardCounter","playerColumn","shootCount","gameEnded","cardsArray","answers","isFocus","gameContainer","document","querySelector","app","PIXI","Application","backgroundColor","width","height","antialias","resolution","autoDensity","checkFocus","e","target","removeEventListener","appendChild","view","renderer","plugins","interaction","autoPreventDefault","style","touchAction","addEventListener","grid","Container","x","y","stage","addChild","scoreWrap","scoreText","Text","scoreValue","nav","bullet1","battleground","player","Sprite","from","endScreen","alpha","endScreenWin","Texture","endScreenLoss","endScreenImg","screenBtn","init","children","i","length","j","item","graph","Graphics","id","isDestroyed","beginFill","drawRect","endFill","push","generationCards","arr","col","box","len","parseInt","drawGrid","fill","fontSize","fontFamily","text","textTransform","drawBtn","moveLeft","shoot","moveRight","imgsrc","imgx","imgy","imgwidth","imgheight","_fun","btn","image","buttonMode","on","animationUpdate","delta","ticker","remove","add","fadeOut","isPressed","bullet","indexArray","index","existsIndex","filter","undestroyedCards","nearbyCard","nearbyCardY","undefined","gameEnd","destroyBullet","displayScore","updateScore","destroy","bulletMove","result","texture","fadeIn","event","key"],"version":3,"file":"recommendations.671da287.js.map"}